{"ast":null,"code":"export const sliceHelper = function (str) {\n  let newString = \"\";\n\n  for (var _len = arguments.length, slices = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    slices[_key - 1] = arguments[_key];\n  }\n\n  for (const sliceElem of slices) {\n    newString += str.slice(...sliceElem);\n  }\n\n  return newString;\n};","map":{"version":3,"sources":["/home/mkwarta/Programming/Notes/notes_frontend/src/helpers/helperfunctions.tsx"],"names":["sliceHelper","str","newString","slices","sliceElem","slice"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,UAACC,GAAD,EAAsC;AAE7D,MAAIC,SAAS,GAAG,EAAhB;;AAF6D,oCAAtBC,MAAsB;AAAtBA,IAAAA,MAAsB;AAAA;;AAG7D,OAAK,MAAMC,SAAX,IAAwBD,MAAxB,EAAgC;AAC5BD,IAAAA,SAAS,IAAED,GAAG,CAACI,KAAJ,CAAU,GAAGD,SAAb,CAAX;AACH;;AACD,SAAOF,SAAP;AACH,CAPM","sourcesContent":["export const sliceHelper = (str:string, ...slices:number[][]) => { \n    \n    let newString = \"\"\n    for (const sliceElem of slices) { \n        newString+=str.slice(...sliceElem)\n    }\n    return newString\n}\n"]},"metadata":{},"sourceType":"module"}