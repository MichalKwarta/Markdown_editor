{"ast":null,"code":"var _jsxFileName = \"/home/mkwarta/Programming/Notes/notes_frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { ThemeProvider } from \"styled-components\"; // import { Routes } from \"react-router-dom\";\n\nimport { motion } from \"framer-motion\";\nimport theme from \"./helpers/theme\";\nimport GlobalStyle from \"./helpers/GlobalStyle\";\nimport FlexStyled from \"./styled/Flex\";\nimport Toggle from \"./styled/Toggle\";\nimport MoonIcon from \"./resources/moon.svg\";\nimport sunIcon from \"./resources/sun.svg\";\nimport WorkArea from \"./components/WorkArea\";\nimport Toolbar from \"./components/Toolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [t, setTheme] = React.useState(\"dark\");\n  const [selection, setSelection] = React.useState({\n    start: 0,\n    end: 0\n  });\n\n  const toggleTheme = () => {\n    if (t === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  const [plainText, setPlainText] = React.useState(\"Write something here\");\n\n  const boldText = () => {\n    if (selection.start >= 0 && selection.end <= plainText.length) {\n      if (props.plainText[selection.start - 2] === '*' && plainText[props.selection.end + 1] === \"*\") {\n        props.setPlainText(sliceHelper(props.plainText, [0, props.selection.start - 2], [props.selection.start, props.selection.end], [props.selection.end + 2]));\n      } else if (props.plainText[props.selection.start] === '*' && props.plainText[props.selection.end - 1] === \"*\") {\n        props.setPlainText(sliceHelper(props.plainText, [0, props.selection.start], [props.selection.start + 2, props.selection.end - 2], [props.selection.end]));\n      } else {\n        props.setPlainText(props.plainText.slice(0, props.selection.start) + \"**\" + props.plainText.slice(props.selection.start, props.selection.end) + \"**\" + props.plainText.slice(props.selection.end));\n      }\n    }\n  };\n\n  const icon = t === \"light\" ? MoonIcon : sunIcon;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme[t],\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, { ...theme[t]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexStyled, {\n      height: \"100vh\",\n      children: [/*#__PURE__*/_jsxDEV(FlexStyled, {\n        width: \"100vw\",\n        direction: \"row\",\n        justify: \"space-between\",\n        align: \"center\",\n        extra: \"padding:1rem 3rem;\",\n        as: motion.div,\n        isbg: 1,\n        initial: {\n          y: \"-100%\"\n        },\n        animate: {\n          y: 0\n        },\n        exit: {\n          y: -100\n        },\n        transition: {\n          duration: 1,\n          ease: \"easeOut\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Awesome Notes App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n          selection: selection,\n          plainText: plainText,\n          setPlainText: setPlainText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n          as: motion.div,\n          onClick: toggleTheme,\n          darkmode: t !== \"light\" ? 1 : 0,\n          children: /*#__PURE__*/_jsxDEV(motion.img, {\n            initial: {\n              y: \"-100%\",\n              opacity: 0\n            },\n            animate: {\n              y: 0,\n              opacity: 1\n            },\n            exit: {\n              y: \"-100%\",\n              opacity: 0\n            },\n            transition: {\n              duration: 0.3,\n              ease: \"easeInOut\"\n            },\n            src: icon,\n            alt: \"\"\n          }, icon, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WorkArea, {\n        selectionSetter: setSelection,\n        plainText: plainText,\n        setPlainText: setPlainText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KwIgKRfpOT8kfuJIRgDj8gRL+dc=\");\n\n_c = App;\nexport default App; // Type '{ selectionSetter: Dispatch<SetStateAction<{ start: number; end: number; }>>; }' is not assignable to type 'IntrinsicAttributes & Dispatch<SetStateAction<{ start: number; end: number; }>>'.\n// Property 'selectionSetter' does not exist on type 'IntrinsicAttributes & Dispatch<SetStateAction<{ start: number; end: number; }>>'.\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mkwarta/Programming/Notes/notes_frontend/src/App.tsx"],"names":["React","ThemeProvider","motion","theme","GlobalStyle","FlexStyled","Toggle","MoonIcon","sunIcon","WorkArea","Toolbar","App","t","setTheme","useState","selection","setSelection","start","end","toggleTheme","plainText","setPlainText","boldText","length","props","sliceHelper","slice","icon","div","y","duration","ease","opacity"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n// import { Routes } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport theme from \"./helpers/theme\";\nimport GlobalStyle from \"./helpers/GlobalStyle\";\nimport FlexStyled from \"./styled/Flex\";\nimport Toggle from \"./styled/Toggle\";\nimport MoonIcon from \"./resources/moon.svg\";\nimport sunIcon from \"./resources/sun.svg\";\nimport WorkArea from \"./components/WorkArea\";\nimport Toolbar from \"./components/Toolbar\";\n\nfunction App() {\n  const [t, setTheme] = React.useState<\"light\" | \"dark\">(\"dark\");\n  const [selection, setSelection] = React.useState({ start: 0, end: 0 });\n  const toggleTheme = () => {\n    if (t === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  \n\n  const [plainText, setPlainText] = React.useState<string>(\"Write something here\");\n  const boldText = () => { \n    if (selection.start >= 0 && selection.end <= plainText.length) {\n      if (props.plainText[selection.start - 2] === '*' && plainText[props.selection.end + 1] === \"*\") {\n          \n        props.setPlainText(sliceHelper(props.plainText,[0, props.selection.start-2], [props.selection.start, props.selection.end] ,[props.selection.end+2]))\n\n      }\n      else if (props.plainText[props.selection.start] === '*' && props.plainText[props.selection.end-1] === \"*\") {\n        props.setPlainText(sliceHelper(props.plainText,[0, props.selection.start], [props.selection.start+2, props.selection.end-2],[props.selection.end]))\n          \n      }\n      else {\n          props.setPlainText(props.plainText.slice(0, props.selection.start) + \"**\" + props.plainText.slice(props.selection.start, props.selection.end) + \"**\" + props.plainText.slice(props.selection.end))\n\n      }\n      \n\n  }\n  }\n\n  const icon = t === \"light\" ? MoonIcon : sunIcon;\n\n  return (\n    <ThemeProvider theme={theme[t]}>\n      <GlobalStyle {...theme[t]} />\n      <FlexStyled height=\"100vh\">\n        <FlexStyled\n          width=\"100vw\"\n          direction=\"row\"\n          justify=\"space-between\"\n          align=\"center\"\n          extra=\"padding:1rem 3rem;\"\n          as={motion.div}\n          isbg={1}\n          initial={{ y: \"-100%\" }}\n          animate={{ y: 0 }}\n          exit={{ y: -100 }}\n          transition={{ duration: 1, ease: \"easeOut\" }}\n        >\n          <h1>Awesome Notes App</h1>\n          <Toolbar selection={ selection}  plainText={plainText} setPlainText={ setPlainText} />\n          <Toggle\n            as={motion.div}\n            onClick={toggleTheme}\n            darkmode={t !== \"light\" ? 1 : 0}\n          >\n            <motion.img\n              key={icon}\n              initial={{ y: \"-100%\", opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              exit={{ y: \"-100%\", opacity: 0 }}\n              transition={{ duration: 0.3, ease: \"easeInOut\" }}\n              src={icon}\n              alt=\"\"\n            />\n          </Toggle>\n        </FlexStyled>\n\n        <WorkArea selectionSetter={setSelection} plainText={plainText} setPlainText={ setPlainText}/>\n      </FlexStyled>\n    </ThemeProvider>\n  );\n}\nexport default App;\n\n// Type '{ selectionSetter: Dispatch<SetStateAction<{ start: number; end: number; }>>; }' is not assignable to type 'IntrinsicAttributes & Dispatch<SetStateAction<{ start: number; end: number; }>>'.\n  // Property 'selectionSetter' does not exist on type 'IntrinsicAttributes & Dispatch<SetStateAction<{ start: number; end: number; }>>'."]},"metadata":{},"sourceType":"module"}