{"ast":null,"code":"var _jsxFileName = \"/home/mkwarta/Programming/Notes/notes_frontend/src/components/WorkArea.tsx\";\nimport Grid from \"../styled/Grid\";\nimport GridChild from \"../styled/GridChild\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport ReactMarkdown from \"react-markdown\";\nimport Toolbar from \"./Toolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WriteArea = styled(GridChild)`\n  grid-column-start: 2;\n  border: 1px solid ${props => props.theme.color || \"transparent\"};\n  width: 100%;\n  height: 100%;\n  resize: none;\n  background-color: ${props => props.theme.elementColor || \"transparent\"};\n  color: ${props => props.theme.color || \"transparent\"};\n  border-radius: 1rem;\n  padding: 1rem;\n  font-size: 1rem;\n  font-family: inherit;\n  letter-spacing: 0.1rem;\n  transition: background-color 0.25s ease-in;\n\n  padding: 1rem;\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n_c = WriteArea;\n\nfunction WorkArea(props) {\n  const handleChange = e => {\n    props.setPlainText(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    templatecolumns: \"1fr 1fr\",\n    templaterows: \"0.1fr 0.9fr\",\n    width: \"100vw\",\n    height: \"100%\",\n    columngap: \"3rem\",\n    rowgap: \"1rem\",\n    padding: \"1rem\",\n    children: [/*#__PURE__*/_jsxDEV(GridChild, {\n      columnstart: 1,\n      columnend: 2,\n      rowstart: 1,\n      rowend: 1,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        plainText: props.plainText,\n        setPlainText: props.setPlainText,\n        boldText: props.boldText,\n        italicText: props.italicText,\n        addHeading: props.addHeading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WriteArea, {\n      as: motion.textarea,\n      initial: {\n        x: \"-100%\"\n      },\n      animate: {\n        x: 0\n      },\n      exit: {\n        x: \"-100%\"\n      },\n      transition: {\n        duration: 1,\n        ease: \"easeOut\"\n      },\n      placeholder: \"Write something here\",\n      onChange: handleChange,\n      rowstart: 1,\n      rowend: 2,\n      columnend: 1,\n      columnstart: 1,\n      onSelect: e => {\n        props.selectionSetter({\n          start: e.target.selectionStart,\n          end: e.target.selectionEnd\n        });\n      },\n      value: props.plainText,\n      onKeyDown: e => {\n        if (e.ctrlKey) {\n          switch (e.key) {\n            case \"b\" || \"B\":\n              props.boldText();\n              break;\n\n            case \"i\" || \"I\":\n              props.italicText();\n              break;\n          }\n        }\n\n        if (e.ctrlKey && e.shiftKey) {\n          switch (e.key) {\n            case \"h\" || \"H\":\n              props.addHeading();\n              break;\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WriteArea, {\n      as: motion.div,\n      initial: {\n        x: \"100%\"\n      },\n      animate: {\n        x: 0\n      },\n      exit: {\n        x: \"100%\"\n      },\n      transition: {\n        duration: 1,\n        ease: \"easeOut\"\n      },\n      rowstart: 1,\n      rowend: 2,\n      columnend: 2,\n      columnstart: 2,\n      className: \"workarea__markdown\",\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: props.plainText,\n        className: \"markdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = WorkArea;\nexport default WorkArea;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WriteArea\");\n$RefreshReg$(_c2, \"WorkArea\");","map":{"version":3,"sources":["/home/mkwarta/Programming/Notes/notes_frontend/src/components/WorkArea.tsx"],"names":["Grid","GridChild","styled","motion","ReactMarkdown","Toolbar","WriteArea","props","theme","color","elementColor","WorkArea","handleChange","e","setPlainText","target","value","plainText","boldText","italicText","addHeading","textarea","x","duration","ease","selectionSetter","start","selectionStart","end","selectionEnd","ctrlKey","key","shiftKey","div"],"mappings":"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","sourcesContent":["import { ChangeEvent, Dispatch, SetStateAction } from \"react\";\nimport Grid from \"../styled/Grid\";\nimport GridChild from \"../styled/GridChild\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport ReactMarkdown from \"react-markdown\";\nimport Toolbar from \"./Toolbar\";\n\nconst WriteArea = styled(GridChild)`\n  grid-column-start: 2;\n  border: 1px solid ${(props) => props.theme.color || \"transparent\"};\n  width: 100%;\n  height: 100%;\n  resize: none;\n  background-color: ${(props) => props.theme.elementColor || \"transparent\"};\n  color: ${(props) => props.theme.color || \"transparent\"};\n  border-radius: 1rem;\n  padding: 1rem;\n  font-size: 1rem;\n  font-family: inherit;\n  letter-spacing: 0.1rem;\n  transition: background-color 0.25s ease-in;\n\n  padding: 1rem;\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nfunction WorkArea(props: {\n  addHeading: () => void;\n  italicText: () => void;\n  boldText: () => void;\n  plainText: string;\n  setPlainText: React.Dispatch<React.SetStateAction<string>>;\n  selectionSetter: Dispatch<SetStateAction<{ start: number; end: number }>>;\n}) {\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    props.setPlainText(e.target.value);\n  };\n  return (\n    <Grid\n      templatecolumns=\"1fr 1fr\"\n      templaterows=\"0.1fr 0.9fr\"\n      width=\"100vw\"\n      height=\"100%\"\n      columngap=\"3rem\"\n      rowgap=\"1rem\"\n      padding=\"1rem\"\n    >\n      <GridChild columnstart={1} columnend={2} rowstart={ 1} rowend={1}>\n      <Toolbar\n            plainText={props.plainText}\n            setPlainText={props.setPlainText}\n            boldText={props.boldText}\n            italicText={props.italicText}\n            addHeading={ props.addHeading}\n          />\n      </GridChild>\n       \n\n      <WriteArea\n        as={motion.textarea}\n        initial={{ x: \"-100%\" }}\n        animate={{ x: 0 }}\n        exit={{ x: \"-100%\" }}\n        transition={{ duration: 1, ease: \"easeOut\" }}\n        placeholder={\"Write something here\"}\n        onChange={handleChange}\n        rowstart={1}\n        rowend={2}\n        columnend={1}\n        columnstart={1}\n        onSelect={(e: ChangeEvent<HTMLTextAreaElement>) => {\n          props.selectionSetter({\n            start: e.target.selectionStart,\n            end: e.target.selectionEnd,\n          });\n        }}\n        value={props.plainText}\n        onKeyDown={(e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n          if (e.ctrlKey) {\n            switch (e.key) {\n              case \"b\" || \"B\":\n                props.boldText();\n                break;\n              case \"i\" || \"I\":\n                props.italicText();\n                break;\n            }\n          }\n\n          if (e.ctrlKey && e.shiftKey) {\n\n            switch (e.key) {\n              case \"h\" || \"H\":\n                props.addHeading();\n\n                break;\n            }\n          }\n        }}\n      ></WriteArea>\n      <WriteArea\n        as={motion.div}\n        initial={{ x: \"100%\" }}\n        animate={{ x: 0 }}\n        exit={{ x: \"100%\" }}\n        transition={{ duration: 1, ease: \"easeOut\" }}\n        rowstart={1}\n        rowend={2}\n        columnend={2}\n        columnstart={2}\n        className=\"workarea__markdown\"\n      >\n        <ReactMarkdown children={props.plainText} className=\"markdown\" />\n      </WriteArea>\n    </Grid>\n  );\n}\n\nexport default WorkArea;\n"]},"metadata":{},"sourceType":"module"}