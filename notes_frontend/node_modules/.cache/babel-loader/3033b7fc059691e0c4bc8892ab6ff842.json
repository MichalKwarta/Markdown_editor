{"ast":null,"code":"var _jsxFileName = \"/home/mkwarta/Programming/Notes/notes_frontend/src/styled/Input.tsx\",\n    _s = $RefreshSig$();\n\nimport { motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = styled.input`\n    border: 1px solid ${props => props.theme.color};\n    border-radius: 0.5rem;\n    padding: 0.5rem;\n    width: 100%;\n    height: 2rem;\n    font-size: 1.5rem;\n    padding:1rem;\n    margin:2rem 0;\n    position:relative;\n    &:blank{\n        outline: none;\n        &+label{\n            transform:none;\n            left:0;\n        }\n    }\n\n  \n\n`;\n_c = Input;\nconst StyledLabel = styled(motion.label)`\n    position:absolute;\n    z-index:10;\n    width:100%;\n    top:50%;\n    left:1rem;\n    transform:translateY(-50%);\n    transition:0.5s ease-in\n\n\n`;\n_c2 = StyledLabel;\n\nfunction StyledInput(props) {\n  _s();\n\n  const variants = {\n    initial: {},\n    focused: {\n      top: \"20%\",\n      transition: {\n        duration: 0.2,\n        ease: \"easeIn\"\n      }\n    }\n  };\n  const [isFocused, setIsFocused] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        myplaceholder: props.myplaceholder,\n        id: props.id,\n        type: props.type,\n        onKeyUp: animationHandler,\n        onEmptied: () => setIsFocused(false),\n        onFocus: () => setIsFocused(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n        variants: variants,\n        animate: isFocused ? \"focused\" : \"initial\",\n        htmlFor: props.id,\n        children: [props.myplaceholder, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(StyledInput, \"taoS6m9NZex5dx3pinefKTdpShE=\");\n\n_c3 = StyledInput;\nexport default StyledInput;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"StyledLabel\");\n$RefreshReg$(_c3, \"StyledInput\");","map":{"version":3,"sources":["/home/mkwarta/Programming/Notes/notes_frontend/src/styled/Input.tsx"],"names":["motion","useState","styled","Input","input","props","theme","color","StyledLabel","label","StyledInput","variants","initial","focused","top","transition","duration","ease","isFocused","setIsFocused","position","myplaceholder","id","type","animationHandler"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAA+B;AACpD,wBAAwBC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;KAAMJ,K;AAqBN,MAAMK,WAAW,GAAGN,MAAM,CAACF,MAAM,CAACS,KAAR,CAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMD,W;;AAaN,SAASE,WAAT,CAAqBL,KAArB,EAAiF;AAAA;;AAC7E,QAAMM,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAE,EADI;AAEbC,IAAAA,OAAO,EAAE;AACLC,MAAAA,GAAG,EAAE,KADA;AAELC,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,GADF;AAERC,QAAAA,IAAI,EAAE;AAFE;AAFP;AAFI,GAAjB;AAWA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAU,KAAV,CAA1C;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAACmB,QAAAA,QAAQ,EAAC;AAAV,OAAZ;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,aAAa,EAAEf,KAAK,CAACgB,aAA5B;AAA2C,QAAA,EAAE,EAAEhB,KAAK,CAACiB,EAArD;AAAyD,QAAA,IAAI,EAAEjB,KAAK,CAACkB,IAArE;AAA2E,QAAA,OAAO,EAAEC,gBAApF;AAAuG,QAAA,SAAS,EAAE,MAAIL,YAAY,CAAC,KAAD,CAAlI;AAA4I,QAAA,OAAO,EAAE,MAAIA,YAAY,CAAC,IAAD;AAArK;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAER,QAAvB;AAAiC,QAAA,OAAO,EAAEO,SAAS,GAAC,SAAD,GAAW,SAA9D;AAA0E,QAAA,OAAO,EAAEb,KAAK,CAACiB,EAAzF;AAAA,mBAA+FjB,KAAK,CAACgB,aAArG;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH;;GAvBQX,W;;MAAAA,W;AA2BT,eAAeA,WAAf","sourcesContent":["import { motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input<{myplaceholder?:string}>`\n    border: 1px solid ${props => props.theme.color};\n    border-radius: 0.5rem;\n    padding: 0.5rem;\n    width: 100%;\n    height: 2rem;\n    font-size: 1.5rem;\n    padding:1rem;\n    margin:2rem 0;\n    position:relative;\n    &:blank{\n        outline: none;\n        &+label{\n            transform:none;\n            left:0;\n        }\n    }\n\n  \n\n`;\nconst StyledLabel = styled(motion.label)`\n    position:absolute;\n    z-index:10;\n    width:100%;\n    top:50%;\n    left:1rem;\n    transform:translateY(-50%);\n    transition:0.5s ease-in\n\n\n`\n\n\nfunction StyledInput(props: { myplaceholder: string, id: string, type: string }) {\n    const variants = {\n        initial: {},\n        focused: {\n            top: \"20%\",\n            transition: {\n                duration: 0.2,\n                ease: \"easeIn\",\n            }\n            \n        }\n    }\n    const [isFocused, setIsFocused] = useState<boolean>(false);\n    return (\n        <>\n            <div style={{position:'relative'}}>\n                <Input myplaceholder={props.myplaceholder} id={props.id} type={props.type} onKeyUp={animationHandler } onEmptied={()=>setIsFocused(false) } onFocus={()=>setIsFocused(true)} />\n                <StyledLabel variants={variants} animate={isFocused?\"focused\":\"initial\" } htmlFor={props.id}>{ props.myplaceholder} </StyledLabel>\n            </div>\n\n            \n        </>\n  )\n}\n\n\n\nexport default StyledInput\n"]},"metadata":{},"sourceType":"module"}