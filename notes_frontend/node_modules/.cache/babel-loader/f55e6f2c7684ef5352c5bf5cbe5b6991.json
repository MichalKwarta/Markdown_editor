{"ast":null,"code":"var _jsxFileName = \"/home/mkwarta/Programming/Notes/notes_frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { ThemeProvider } from \"styled-components\"; // import { Routes } from \"react-router-dom\";\n\nimport { motion } from \"framer-motion\";\nimport theme from \"./helpers/theme\";\nimport GlobalStyle from \"./helpers/GlobalStyle\";\nimport FlexStyled from \"./styled/Flex\";\nimport Toggle from \"./styled/Toggle\";\nimport MoonIcon from \"./resources/moon.svg\";\nimport sunIcon from \"./resources/sun.svg\";\nimport WorkArea from \"./components/WorkArea\";\nimport Toolbar from \"./components/Toolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [t, setTheme] = React.useState(\"light\"); // The function that toggles between themes\n\n  const toggleTheme = () => {\n    // if the theme is not light, then set it to dark\n    if (t === \"light\") {\n      setTheme(\"dark\"); // otherwise, it should be light\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  const icon = t === \"light\" ? MoonIcon : sunIcon;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme[t],\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, { ...theme[t]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexStyled, {\n      height: \"100vh\",\n      children: [/*#__PURE__*/_jsxDEV(FlexStyled, {\n        width: \"100vw\",\n        direction: \"row\",\n        justify: \"space-between\",\n        align: \"center\",\n        extra: \"padding:1rem 3rem;\",\n        as: motion.div,\n        isbg: 1,\n        initial: {\n          y: \"-100%\"\n        },\n        animate: {\n          y: 0\n        },\n        exit: {\n          y: -100\n        },\n        transition: {\n          duration: 1,\n          ease: \"easeOut\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to my note app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n          as: motion.div,\n          onClick: () => {\n            toggleTheme();\n            console.log(window.getSelection().toString());\n          },\n          darkmode: t !== \"light\" ? 1 : 0,\n          children: /*#__PURE__*/_jsxDEV(motion.img, {\n            initial: {\n              y: \"-100%\",\n              opacity: 0\n            },\n            animate: {\n              y: 0,\n              opacity: 1\n            },\n            exit: {\n              y: \"-100%\",\n              opacity: 0\n            },\n            transition: {\n              duration: 0.3,\n              ease: \"easeInOut\"\n            },\n            src: icon,\n            alt: \"\"\n          }, icon, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WorkArea, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gZPB5LHxEOQzRqDc8NskK6qJ7Fo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mkwarta/Programming/Notes/notes_frontend/src/App.tsx"],"names":["React","ThemeProvider","motion","theme","GlobalStyle","FlexStyled","Toggle","MoonIcon","sunIcon","WorkArea","Toolbar","App","t","setTheme","useState","toggleTheme","icon","div","y","duration","ease","console","log","window","getSelection","toString","opacity"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n// import { Routes } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport theme from \"./helpers/theme\";\nimport GlobalStyle from \"./helpers/GlobalStyle\";\nimport FlexStyled from \"./styled/Flex\";\nimport Toggle from \"./styled/Toggle\";\nimport MoonIcon from \"./resources/moon.svg\";\nimport sunIcon from \"./resources/sun.svg\";\nimport WorkArea from \"./components/WorkArea\";\nimport Toolbar from \"./components/Toolbar\";\n\nfunction App() {\n  const [t, setTheme] = React.useState<\"light\" | \"dark\">(\"light\");\n\n  // The function that toggles between themes\n  const toggleTheme = () => {\n    // if the theme is not light, then set it to dark\n    if (t === \"light\") {\n      setTheme(\"dark\");\n      // otherwise, it should be light\n    } else {\n      setTheme(\"light\");\n    }\n  };\n  const icon = t === \"light\" ? MoonIcon : sunIcon;\n\n  return (\n    <ThemeProvider theme={theme[t]}>\n      <GlobalStyle {...theme[t]} />\n      <FlexStyled\n          height=\"100vh\"\n       \n      >\n        <FlexStyled\n          width=\"100vw\"\n          direction=\"row\"\n          justify=\"space-between\"\n          align=\"center\"\n          extra=\"padding:1rem 3rem;\"\n          as={motion.div}\n          isbg={ 1}\n          initial={{ y: \"-100%\" }}\n          animate={{ y: 0 }}\n          exit={{ y: -100 }}\n          transition={{ duration: 1, ease: \"easeOut\" }}\n          \n        >\n          <h1>Welcome to my note app</h1>\n            <Toolbar/>\n          <Toggle\n            as={motion.div}\n            onClick={() => { toggleTheme(); console.log(window.getSelection()!.toString()) }}\n            darkmode={t !== \"light\"?1:0}\n          >\n            <motion.img\n              key={icon}\n              initial={{ y: \"-100%\", opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              exit={{ y: \"-100%\", opacity: 0 }}\n              transition={{ duration: 0.3, ease: \"easeInOut\" }}\n              src={icon}\n              alt=\"\"\n            />\n          </Toggle>\n        </FlexStyled>\n\n        <WorkArea></WorkArea>\n\n\n      </FlexStyled>\n    </ThemeProvider>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}