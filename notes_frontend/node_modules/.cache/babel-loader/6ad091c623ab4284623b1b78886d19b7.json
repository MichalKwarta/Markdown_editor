{"ast":null,"code":"var _jsxFileName = \"/home/mkwarta/Programming/Notes/notes_frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { ThemeProvider } from \"styled-components\"; // import { Routes } from \"react-router-dom\";\n\nimport { motion } from \"framer-motion\";\nimport theme from \"./helpers/theme\";\nimport GlobalStyle from \"./helpers/GlobalStyle\";\nimport FlexStyled from \"./styled/Flex\";\nimport Toggle from \"./styled/Toggle\";\nimport MoonIcon from \"./resources/moon.svg\";\nimport sunIcon from \"./resources/sun.svg\";\nimport WorkArea from \"./components/WorkArea\";\nimport { sliceHelper } from \"./helpers/helperfunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [t, setTheme] = React.useState(\"dark\");\n  const [selection, setSelection] = React.useState({\n    start: 0,\n    end: 0\n  });\n\n  const toggleTheme = () => {\n    if (t === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  const [plainText, setPlainText] = React.useState(\"Write something here\");\n\n  const selectionChecker = () => {\n    return selection.start !== selection.end && selection.start >= 0 && selection.end <= plainText.length;\n  };\n\n  const boldText = () => {\n    console.log(plainText[0] === '\\n');\n    console.log(plainText.split(''));\n    if (selectionChecker() === false) return;\n\n    if (plainText[selection.start - 2] === \"*\" && plainText[selection.end + 1] === \"*\") {\n      setPlainText(sliceHelper(plainText, [0, selection.start - 2], [selection.start, selection.end], [selection.end + 2]));\n    } else if (plainText[selection.start] === \"*\" && plainText[selection.end - 1] === \"*\") {\n      setPlainText(sliceHelper(plainText, [0, selection.start], [selection.start + 2, selection.end - 2], [selection.end]));\n    } else {\n      setPlainText(plainText.slice(0, selection.start) + \"**\" + plainText.slice(selection.start, selection.end) + \"**\" + plainText.slice(selection.end));\n    }\n  };\n\n  const italicText = () => {\n    if (selectionChecker() === false) return;\n\n    if (plainText[selection.start] === \"*\" && plainText[selection.end - 1] === \"*\") {\n      setPlainText(sliceHelper(plainText, [0, selection.start], [selection.start + 1, selection.end - 1], [selection.end]));\n    } else if (plainText[selection.start - 1] === \"*\" && plainText[selection.end] === \"*\") {\n      setPlainText(sliceHelper(plainText, [0, selection.start - 1], [selection.start, selection.end], [selection.end + 1]));\n    } else {\n      setPlainText(plainText.slice(0, selection.start) + \"*\" + plainText.slice(selection.start, selection.end) + \"*\" + plainText.slice(selection.end));\n    }\n  };\n\n  const addHeading = () => {\n    console.log(selection.start, selection.end);\n    let start = selection.start;\n\n    while (start >= 0) {\n      if (plainText[start] === '\\n') {\n        break;\n      } else if (plainText[start] === '#') {\n        setPlainText(sliceHelper(plainText, [0, start], [start + 1, selection.end], [selection.end]));\n        return;\n      }\n\n      start--;\n    }\n\n    let end = selection.end;\n\n    while (end < plainText.length) {\n      if (plainText[end] === '\\n') {\n        break;\n      }\n\n      end++;\n    }\n\n    const text = plainText.slice(0, start + 1) + (plainText[start + 1] === ' ' ? '#' : \"# \") + plainText.slice(start + 1, end) + plainText.slice(end);\n    setPlainText(text);\n  };\n\n  const icon = t === \"light\" ? MoonIcon : sunIcon;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme[t],\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, { ...theme[t]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexStyled, {\n      height: \"100%\",\n      wrap: \"nowrap\",\n      children: [/*#__PURE__*/_jsxDEV(FlexStyled, {\n        width: \"100%\",\n        direction: \"row\",\n        justify: \"space-between\",\n        align: \"center\",\n        extra: \"padding:1rem 3rem;\",\n        as: motion.div,\n        isbg: 1,\n        initial: {\n          y: \"-100%\"\n        },\n        animate: {\n          y: 0\n        },\n        exit: {\n          y: -100\n        },\n        transition: {\n          duration: 1,\n          ease: \"easeOut\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Awesome Notes App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n          as: motion.div,\n          onClick: toggleTheme,\n          darkmode: t !== \"light\" ? 1 : 0,\n          children: /*#__PURE__*/_jsxDEV(motion.img, {\n            initial: {\n              y: \"-100%\",\n              opacity: 0\n            },\n            animate: {\n              y: 0,\n              opacity: 1\n            },\n            exit: {\n              y: \"-100%\",\n              opacity: 0\n            },\n            transition: {\n              duration: 0.3,\n              ease: \"easeInOut\"\n            },\n            src: icon,\n            alt: \"\"\n          }, icon, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WorkArea, {\n        selectionSetter: setSelection,\n        plainText: plainText,\n        setPlainText: setPlainText,\n        boldText: boldText,\n        italicText: italicText,\n        addHeading: addHeading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KwIgKRfpOT8kfuJIRgDj8gRL+dc=\");\n\n_c = App;\nexport default App; // Type '{ selectionSetter: Dispatch<SetStateAction<{ start: number; end: number; }>>; }' is not assignable to type 'IntrinsicAttributes & Dispatch<SetStateAction<{ start: number; end: number; }>>'.\n// Property 'selectionSetter' does not exist on type 'IntrinsicAttributes & Dispatch<SetStateAction<{ start: number; end: number; }>>'.\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mkwarta/Programming/Notes/notes_frontend/src/App.tsx"],"names":["React","ThemeProvider","motion","theme","GlobalStyle","FlexStyled","Toggle","MoonIcon","sunIcon","WorkArea","sliceHelper","App","t","setTheme","useState","selection","setSelection","start","end","toggleTheme","plainText","setPlainText","selectionChecker","length","boldText","console","log","split","slice","italicText","addHeading","text","icon","div","y","duration","ease","opacity"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n// import { Routes } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport theme from \"./helpers/theme\";\nimport GlobalStyle from \"./helpers/GlobalStyle\";\nimport FlexStyled from \"./styled/Flex\";\nimport Toggle from \"./styled/Toggle\";\nimport MoonIcon from \"./resources/moon.svg\";\nimport sunIcon from \"./resources/sun.svg\";\nimport WorkArea from \"./components/WorkArea\";\nimport Toolbar from \"./components/Toolbar\";\nimport { sliceHelper } from \"./helpers/helperfunctions\";\n\nfunction App() {\n  const [t, setTheme] = React.useState<\"light\" | \"dark\">(\"dark\");\n  const [selection, setSelection] = React.useState({ start: 0, end: 0 });\n  const toggleTheme = () => {\n    if (t === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  const [plainText, setPlainText] = React.useState<string>(\n    \"Write something here\"\n  );\n\n  const selectionChecker: () => boolean = () => {\n    return (\n      selection.start !== selection.end &&\n      selection.start >= 0 &&\n      selection.end <= plainText.length\n    );\n  };\n\n  const boldText = () => {\n    console.log(plainText[0]==='\\n')\n    console.log(plainText.split(''))\n    if (selectionChecker() === false) return;\n\n    if (\n      plainText[selection.start - 2] === \"*\" &&\n      plainText[selection.end + 1] === \"*\"\n    ) {\n      setPlainText(\n        sliceHelper(\n          plainText,\n          [0, selection.start - 2],\n          [selection.start, selection.end],\n          [selection.end + 2]\n        )\n      );\n    } else if (\n      plainText[selection.start] === \"*\" &&\n      plainText[selection.end - 1] === \"*\"\n    ) {\n      setPlainText(\n        sliceHelper(\n          plainText,\n          [0, selection.start],\n          [selection.start + 2, selection.end - 2],\n          [selection.end]\n        )\n      );\n    } else {\n      setPlainText(\n        plainText.slice(0, selection.start) +\n          \"**\" +\n          plainText.slice(selection.start, selection.end) +\n          \"**\" +\n          plainText.slice(selection.end)\n      );\n    }\n  };\n  const italicText = () => {\n    if (selectionChecker() === false) return;\n\n    if (\n      plainText[selection.start] === \"*\" &&\n      plainText[selection.end - 1] === \"*\"\n    ) {\n      setPlainText(\n        sliceHelper(\n          plainText,\n          [0, selection.start],\n          [selection.start+1, selection.end-1],\n          [selection.end ]\n        )\n      );\n    }\n    else if (\n      plainText[selection.start-1] === \"*\" &&\n      plainText[selection.end ] === \"*\"\n    ) { \n      setPlainText(\n        sliceHelper(\n          plainText,\n          [0, selection.start-1],\n          [selection.start, selection.end],\n          [selection.end+1]\n        )\n      );\n      \n    }\n    \n    else {\n      setPlainText(\n        plainText.slice(0, selection.start) +\n          \"*\" +\n          plainText.slice(selection.start, selection.end) +\n          \"*\" +\n          plainText.slice(selection.end)\n      );\n    }\n  };\n  const addHeading = () => { \n    console.log(selection.start,selection.end);\n    \n    let start = selection.start\n\n    while (start >= 0){ \n      if (plainText[start] === '\\n') {\n        break;\n      }\n      else if (plainText[start] === '#') {\n        setPlainText(sliceHelper(plainText, [0, start], [start+1, selection.end],[selection.end]))\n        return;\n      }\n      start--;\n    }\n    let end = selection.end\n    while (end < plainText.length) {\n      if (plainText[end] === '\\n') {\n        break;\n      }\n      end++\n    }\n\n    const text = plainText.slice(0, start+1) + ((plainText[start+1]===' ')?'#':\"# \") + plainText.slice(start+1, end)  + plainText.slice(end)\n    setPlainText(text)\n\n\n\n  }\n\n  \n  const icon = t === \"light\" ? MoonIcon : sunIcon;\n\n  return (\n    <ThemeProvider theme={theme[t]}>\n      <GlobalStyle {...theme[t]} />\n      <FlexStyled height=\"100%\" wrap=\"nowrap\">\n        <FlexStyled\n          width=\"100%\"\n          direction=\"row\"\n          justify=\"space-between\"\n          align=\"center\"\n          extra=\"padding:1rem 3rem;\"\n          as={motion.div}\n          isbg={1}\n          initial={{ y: \"-100%\" }}\n          animate={{ y: 0 }}\n          exit={{ y: -100 }}\n          transition={{ duration: 1, ease: \"easeOut\" }}\n        >\n          <h1>Awesome Notes App</h1>\n         \n          <Toggle\n            as={motion.div}\n            onClick={toggleTheme}\n            darkmode={t !== \"light\" ? 1 : 0}\n          >\n            <motion.img\n              key={icon}\n              initial={{ y: \"-100%\", opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              exit={{ y: \"-100%\", opacity: 0 }}\n              transition={{ duration: 0.3, ease: \"easeInOut\" }}\n              src={icon}\n              alt=\"\"\n            />\n          </Toggle>\n        </FlexStyled>\n\n        <WorkArea\n          selectionSetter={setSelection}\n          plainText={plainText}\n          setPlainText={setPlainText}\n          boldText={boldText}\n          italicText={italicText}\n          addHeading={ addHeading}\n          \n\n        />\n      </FlexStyled>\n    </ThemeProvider>\n  );\n}\nexport default App;\n\n// Type '{ selectionSetter: Dispatch<SetStateAction<{ start: number; end: number; }>>; }' is not assignable to type 'IntrinsicAttributes & Dispatch<SetStateAction<{ start: number; end: number; }>>'.\n// Property 'selectionSetter' does not exist on type 'IntrinsicAttributes & Dispatch<SetStateAction<{ start: number; end: number; }>>'.\n"]},"metadata":{},"sourceType":"module"}