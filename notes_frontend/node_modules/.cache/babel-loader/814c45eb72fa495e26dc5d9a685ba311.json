{"ast":null,"code":"var _jsxFileName = \"/home/mkwarta/Programming/Notes/notes_frontend/src/components/Toolbar.tsx\";\nimport React from \"react\";\nimport { FaBold, FaItalic, FaHeading } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport FlexStyled from \"../styled/Flex\";\nimport { motion } from \"framer-motion\";\nimport SpanWithHoverAnimation from \"../styled/SpanWithHoverAnimation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToolbarWrapper = styled(FlexStyled)`\n  background-color: ${props => props.theme.bg};\n  border-radius: 0.5rem;\n  transition: background-color 0.25s ease-in;\n\n  & > * {\n    border: 1px solid ${props => props.theme.color};\n    width: 2rem;\n    height: 2rem;\n    padding: 0.5rem;\n    border-radius: 0.5rem;\n    margin: 0 0.3rem;\n  }\n`;\n_c = ToolbarWrapper;\nconst container = {\n  hidden: {\n    opacity: 0\n  },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.2,\n      delay: 0.5,\n      delayChildren: 0.5\n    }\n  }\n};\nconst item = {\n  hidden: {\n    opacity: 0,\n    y: \"-100%\"\n  },\n  show: {\n    opacity: 1,\n    y: 0\n  }\n};\n\nconst sliceHelper = function (str) {\n  let newString = \"\";\n\n  for (var _len = arguments.length, slices = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    slices[_key - 1] = arguments[_key];\n  }\n\n  for (const sliceElem of slices) {\n    newString += str.slice(...sliceElem);\n  }\n\n  return newString;\n};\n\nconst boldSelection = () => {\n  if (props.selection.start >= 0 && props.selection.end <= props.plainText.length) {\n    if (props.plainText[props.selection.start - 2] === '*' && props.plainText[props.selection.end + 1] === \"*\") {\n      props.setPlainText(sliceHelper(props.plainText, [0, props.selection.start - 2], [props.selection.start, props.selection.end], [props.selection.end + 2]));\n    } else if (props.plainText[props.selection.start] === '*' && props.plainText[props.selection.end - 1] === \"*\") {\n      props.setPlainText(sliceHelper(props.plainText, [0, props.selection.start], [props.selection.start + 2, props.selection.end - 2], [props.selection.end]));\n    } else {\n      props.setPlainText(props.plainText.slice(0, props.selection.start) + \"**\" + props.plainText.slice(props.selection.start, props.selection.end) + \"**\" + props.plainText.slice(props.selection.end));\n    }\n  }\n};\n\nfunction Toolbar(props) {\n  return /*#__PURE__*/_jsxDEV(ToolbarWrapper, {\n    as: motion.div,\n    direction: \"row\",\n    justify: \"center\",\n    align: \"center\",\n    width: \"20%\",\n    variants: container,\n    initial: \"hidden\",\n    animate: \"show\",\n    children: [/*#__PURE__*/_jsxDEV(SpanWithHoverAnimation, {\n      as: motion.span,\n      variants: item,\n      onClick: () => {},\n      children: /*#__PURE__*/_jsxDEV(FaBold, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(SpanWithHoverAnimation, {\n      as: motion.span,\n      variants: item,\n      children: /*#__PURE__*/_jsxDEV(FaItalic, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpanWithHoverAnimation, {\n      as: motion.span,\n      variants: item,\n      children: /*#__PURE__*/_jsxDEV(FaHeading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Toolbar;\nexport default Toolbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToolbarWrapper\");\n$RefreshReg$(_c2, \"Toolbar\");","map":{"version":3,"sources":["/home/mkwarta/Programming/Notes/notes_frontend/src/components/Toolbar.tsx"],"names":["React","FaBold","FaItalic","FaHeading","styled","FlexStyled","motion","SpanWithHoverAnimation","ToolbarWrapper","props","theme","bg","color","container","hidden","opacity","show","transition","staggerChildren","delay","delayChildren","item","y","sliceHelper","str","newString","slices","sliceElem","slice","boldSelection","selection","start","end","plainText","length","setPlainText","Toolbar","div","span"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FaBold, FaItalic, FaHeading } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport FlexStyled from \"../styled/Flex\";\nimport { motion } from \"framer-motion\";\nimport SpanWithHoverAnimation from \"../styled/SpanWithHoverAnimation\";\n\nconst ToolbarWrapper = styled(FlexStyled)`\n  background-color: ${(props) => props.theme.bg};\n  border-radius: 0.5rem;\n  transition: background-color 0.25s ease-in;\n\n  & > * {\n    border: 1px solid ${(props) => props.theme.color};\n    width: 2rem;\n    height: 2rem;\n    padding: 0.5rem;\n    border-radius: 0.5rem;\n    margin: 0 0.3rem;\n  }\n`;\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.2,\n      delay: 0.5,\n      delayChildren: 0.5,\n    },\n  },\n};\n\nconst item = {\n  hidden: { opacity: 0, y: \"-100%\" },\n  show: { opacity: 1, y: 0 },\n};\n\nconst sliceHelper = (str:string, ...slices:number[][]) => { \n    \n    let newString = \"\"\n    for (const sliceElem of slices) { \n        newString+=str.slice(...sliceElem)\n    }\n    return newString\n}\n\n\nconst boldSelection = () => { \n  if (props.selection.start >= 0 && props.selection.end <= props.plainText.length) {\n    if (props.plainText[props.selection.start - 2] === '*' && props.plainText[props.selection.end + 1] === \"*\") {\n        \n      props.setPlainText(sliceHelper(props.plainText,[0, props.selection.start-2], [props.selection.start, props.selection.end] ,[props.selection.end+2]))\n\n    }\n    else if (props.plainText[props.selection.start] === '*' && props.plainText[props.selection.end-1] === \"*\") {\n      props.setPlainText(sliceHelper(props.plainText,[0, props.selection.start], [props.selection.start+2, props.selection.end-2],[props.selection.end]))\n        \n    }\n    else {\n        props.setPlainText(props.plainText.slice(0, props.selection.start) + \"**\" + props.plainText.slice(props.selection.start, props.selection.end) + \"**\" + props.plainText.slice(props.selection.end))\n\n    }\n    \n\n}\n}\n\nfunction Toolbar(props: { selection: { start: number, end: number },plainText:string,setPlainText:React.Dispatch<React.SetStateAction<string>> }) {\n  return (\n    <ToolbarWrapper\n      as={motion.div}\n      direction=\"row\"\n      justify=\"center\"\n      align=\"center\"\n      width=\"20%\"\n      variants={container}\n      initial=\"hidden\"\n      animate=\"show\"\n    >\n          <SpanWithHoverAnimation as={motion.span} variants={item} onClick={() => {\n            \n             \n          }}>\n        <FaBold />\n      </SpanWithHoverAnimation>\n\n      <SpanWithHoverAnimation as={motion.span} variants={item}>\n        <FaItalic />\n      </SpanWithHoverAnimation>\n      <SpanWithHoverAnimation as={motion.span} variants={item}>\n        <FaHeading />\n      </SpanWithHoverAnimation>\n    </ToolbarWrapper>\n  );\n}\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}