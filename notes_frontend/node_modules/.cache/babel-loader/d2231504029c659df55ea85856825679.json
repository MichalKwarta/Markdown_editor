{"ast":null,"code":"var _jsxFileName = \"/home/mkwarta/Programming/Notes/notes_frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { ThemeProvider } from \"styled-components\"; // import { Routes } from \"react-router-dom\";\n\nimport theme from \"./helpers/theme\";\nimport GlobalStyle from \"./helpers/GlobalStyle\";\nimport FlexStyled from \"./styled/Flex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [t, setTheme] = React.useState('light'); // The function that toggles between themes\n\n  const toggleTheme = () => {\n    // if the theme is not light, then set it to dark\n    if (t === 'light') {\n      setTheme('dark'); // otherwise, it should be light\n    } else {\n      setTheme('light');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme[t],\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, { ...theme[t]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexStyled, {\n      height: \"100vh\",\n      width: \"100vw\",\n      justify: \"start\",\n      extra: \"padding:100px;\",\n      isBg: true,\n      children: [/*#__PURE__*/_jsxDEV(FlexStyled, {\n        width: \"100vw\",\n        direction: \"row\",\n        justify: \"end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to React Router!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTheme,\n        children: \"aaaaaaa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5QyDrCaNOu5MThr/TEjja/6BS/4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mkwarta/Programming/Notes/notes_frontend/src/App.tsx"],"names":["React","ThemeProvider","theme","GlobalStyle","FlexStyled","App","t","setTheme","useState","toggleTheme"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,mBAA9B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,CAAD,EAAIC,QAAJ,IAAgBP,KAAK,CAACQ,QAAN,CAA+B,OAA/B,CAAtB,CADa,CAGb;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxB;AACA,QAAIH,CAAC,KAAK,OAAV,EAAmB;AACjBC,MAAAA,QAAQ,CAAC,MAAD,CAAR,CADiB,CAEjB;AACD,KAHD,MAGO;AACLA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GARD;;AAUA,sBAEE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAGL,KAAK,CAACI,CAAD,CAA5B;AAAA,4BACE,QAAC,WAAD,OAAiBJ,KAAK,CAACI,CAAD;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAC,OAAnB;AAA2B,MAAA,KAAK,EAAC,OAAjC;AAAyC,MAAA,OAAO,EAAC,OAAjD;AAAyD,MAAA,KAAK,EAAC,gBAA/D;AAAgF,MAAA,IAAI,EAAE,IAAtF;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,OAAlB;AAA0B,QAAA,SAAS,EAAC,KAApC;AAA0C,QAAA,OAAO,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,OAAO,EAAGG,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAiBD;;GA/BQJ,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["import * as React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n// import { Routes } from \"react-router-dom\";\nimport theme from \"./helpers/theme\";\nimport styled from \"styled-components\";\nimport GlobalStyle from \"./helpers/GlobalStyle\";\nimport FlexStyled from \"./styled/Flex\";\n\n\nfunction App() {\n  const [t, setTheme] = React.useState<\"light\"|\"dark\">('light');\n\n  // The function that toggles between themes\n  const toggleTheme = () => {\n    // if the theme is not light, then set it to dark\n    if (t === 'light') {\n      setTheme('dark');\n      // otherwise, it should be light\n    } else {\n      setTheme('light');\n    }\n  }\n\n  return (\n    \n    <ThemeProvider theme={ theme[t]}>\n      <GlobalStyle {...theme[t]}/>\n      <FlexStyled height='100vh' width='100vw' justify=\"start\" extra=\"padding:100px;\" isBg={true}>\n        <FlexStyled width=\"100vw\" direction=\"row\" justify=\"end\">\n\n        </FlexStyled>\n        <h1>Welcome to React Router!</h1>\n        <button onClick={ toggleTheme}>aaaaaaa</button>\n        \n        </FlexStyled>\n        \n        \n    </ThemeProvider>\n      \n  );\n}\nexport default App"]},"metadata":{},"sourceType":"module"}